package com.myInventory.model;


import jakarta.persistence.*;
import jakarta.validation.constraints.NotNull;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;
import java.util.List;

@Entity
// Defines table with the name 'invoice'
@Table(name = "invoice")
public class Invoice implements Serializable {

    // Will be the unique id generated for this object
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    // To manage two or more users editing the same thing
    @Version
    private Integer version;

    // Creates date and must not be empty
    @Temporal(TemporalType.DATE)
    @Column(nullable = false, name = "dateCreated")
    private Date dateCreated;

    // Total for invoice, must not be empty, initialized to 0 at first
    @NotNull
    @Column(nullable = false, length = 20, scale = 2, precision = 8)
    private BigDecimal total = BigDecimal.ZERO;

    // Many invoices to one client relationship
    @NotNull
    @ManyToOne
    private Client client;

    // One invoice to many items relationship items listed as an array
    @OneToMany(mappedBy = "invoice")
    private List<Item> items;

    // Default constructor
    public Invoice() {
    }

    // Getters and Setters generated by the IDE

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Integer getVersion() {
        return version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    public Date getDateCreated() {
        return dateCreated;
    }

    public void setDateCreated(Date dateCreated) {
        this.dateCreated = dateCreated;
    }

    public BigDecimal getTotal() {
        return total;
    }

    public void setTotal(BigDecimal total) {
        this.total = total;
    }

    public Client getClient() {
        return client;
    }

    public void setClient(Client client) {
        this.client = client;
    }

    public List<Item> getItems() {
        return items;
    }

    public void setItems(List<Item> items) {
        this.items = items;
    }


}
